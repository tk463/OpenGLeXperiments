#version 400

layout(triangles, equal_spacing, cw) in;
in vec3 tcPosition[];
out vec3 tePosition;
//out vec3 tePatchDistance;
uniform mat4 Projection;
uniform mat4 Model;
uniform mat4 View;
uniform bool areaA;
uniform bool areaB;
uniform bool areaC;
uniform bool areaD;

float pointOnLine(vec3 p0, vec3 p1, vec3 local)
{
    float value = (p1.x - p0.x) * (local.y - p0.y) - (local.x - p0.x) * (p1.y - p0.y);
    return value;
}

void main()
{
    vec3 p0 = gl_TessCoord.x * tcPosition[0];
    vec3 p1 = gl_TessCoord.y * tcPosition[1];
    vec3 p2 = gl_TessCoord.z * tcPosition[2];
    //tePatchDistance = gl_TessCoord;

    tePosition = normalize(p0 + p1 + p2);
    switch (gl_PrimitiveID)
    {
        case 1:
        case 4:
        case 7:
        case 9:
        if (areaA) {
            if (gl_TessCoord.x > 0.19 && gl_TessCoord.x < 0.78)
            {
                if(gl_TessCoord.y > 0.12 && gl_TessCoord.y < 0.8)
                {
                    if(gl_TessCoord.z > 0.2 && gl_TessCoord.z < 0.71)
                    {
                        tePosition = normalize(p0 + p1 + p2) * 1.01;
                    }
                }
            }
            if (gl_TessCoord.x > 0.32 && gl_TessCoord.x < 0.59)
            {
                if(gl_TessCoord.y > 0.21 && gl_TessCoord.y < 0.68)
                {
                    if(gl_TessCoord.z > 0.37 && gl_TessCoord.z < 0.54)
                    {
                        tePosition = normalize(p0 + p1 + p2) * 1.03;
                    }
                }
            }
        }
            break;
        case 0:
        case 10:
        case 12:
        case 18:
        if (areaB) {
            if (gl_TessCoord.x > 0.16 && gl_TessCoord.x < 0.75)
            {
                if(gl_TessCoord.y > 0.15 && gl_TessCoord.y < 0.67)
                {
                    if(gl_TessCoord.z > 0.18 && gl_TessCoord.z < 0.72)
                    {
                        tePosition = normalize(p0 + p1 + p2) * 0.98;
                    }
                }
            }
            if (gl_TessCoord.x > 0.27 && gl_TessCoord.x < 0.61)
            {
                if(gl_TessCoord.y > 0.1 && gl_TessCoord.y < 0.5)
                {
                    if(gl_TessCoord.z > 0.29 && gl_TessCoord.z < 0.6)
                    {
                        tePosition = normalize(p0 + p1 + p2) * 0.96;
                    }
                }
            }
        }
            break;
        case 3:
        case 5:
        case 8:
        case 16:
        case 19:
        if (areaC) {
            if (gl_TessCoord.x > 0.3 && gl_TessCoord.x < 0.7)
            {
                if(gl_TessCoord.y > 0.18 && gl_TessCoord.y < 0.72)
                {
                    if(gl_TessCoord.z > 0.22 && gl_TessCoord.z < 0.67)
                    {
                        tePosition = normalize(p0 + p1 + p2) * 1.02;
                    }
                }
            }
        }
            break;
        case 2:
        case 6:
        case 11:
        case 13:
        case 17:
        if (areaD) {
            if (gl_TessCoord.x > 0.25 && gl_TessCoord.x < 0.8)
            {
                if(gl_TessCoord.y > 0.18 && gl_TessCoord.y < 0.74)
                {
                    if(gl_TessCoord.z > 0.26 && gl_TessCoord.z < 0.69)
                    {
                        tePosition = normalize(p0 + p1 + p2) * 0.97;
                    }
                }
            }
        }
            break;
    }
    gl_Position = Projection * View * Model * vec4(tePosition, 1);
}